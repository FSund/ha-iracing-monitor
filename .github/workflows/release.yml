on:
  release:
    types: [created]

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always
  # default values
  VERSION: ${{ github.event.release.tag_name }}
  ASSET: ${{ github.event.release.tag_name }}.zip

jobs:
  release:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive-suffix: .zip
          - target: x86_64-unknown-linux-gnu
            archive-suffix: .tar.gz

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Set up Rust
        run: |
          rustup toolchain install stable --profile minimal --no-self-update --target ${{ matrix.target }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libglib2.0-dev \
            libpango1.0-dev \
            libgdk-pixbuf2.0-dev \
            libatk1.0-dev \
            libgtk-3-dev \
            libxdo-dev \
            pkg-config \
            mingw-w64

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
          # Get binary name from Cargo.toml
          binary_name=$(grep -m1 'name *=' Cargo.toml | cut -d '"' -f2)

          dirname="$binary_name-${{ env.VERSION }}-${{ matrix.target }}"
          mkdir "$dirname"
          
          # Copy binary
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
          else
            mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
          fi

          # Copy additional files
          cp README.md LICENSE* "$dirname" 2>/dev/null || true

          # Create archive based on target
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            7z a "$dirname.zip" "$dirname"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          fi

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.ASSET }}
