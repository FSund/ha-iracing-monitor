name: Release

on:
  release:
    types: [created]

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always
  # default values
  VERSION: ${{ github.event.release.tag_name }}
  ASSET: ${{ github.event.release.tag_name }}.zip

jobs:
  linux:
    name: Linux release 
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      # Add cache for release job
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "release-linux"
          cache-directories: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git
            target/

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libglib2.0-dev \
            libpango1.0-dev \
            libgdk-pixbuf2.0-dev \
            libatk1.0-dev \
            libgtk-3-dev \
            libxdo-dev \
            pkg-config \
            mingw-w64

      - name: Build
        run: cargo build --release

      - name: Build archive
        shell: bash
        run: |
          # Get binary name from Cargo.toml
          binary_name=$(grep -m1 'name *=' Cargo.toml | cut -d '"' -f2)

          dirname="$binary_name-${{ env.VERSION }}-linux"
          mkdir "$dirname"
          
          # Copy binary
          mv "target/release/$binary_name" "$dirname"

          # Copy additional files
          cp README.md LICENSE* "$dirname" 2>/dev/null || true

          # Create archive
          tar -czf "$dirname.tar.gz" "$dirname"
          echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.ASSET }}

  windows:
    name: Windows release
    runs-on: windows-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      # Add cache for release job
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "release-windows"
          cache-directories: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git
            target/

      - name: Build
        run: cargo build --release

      - name: Build archive
        shell: bash
        run: |
          # Get binary name from Cargo.toml
          binary_name=$(grep -m1 'name *=' Cargo.toml | cut -d '"' -f2)

          dirname="$binary_name-${{ env.VERSION }}-windows-portable"
          mkdir "$dirname"
          
          # Copy binary
          cp "target/release/$binary_name.exe" "$dirname"

          # Copy additional files
          cp README.md LICENSE* "$dirname" 2>/dev/null || true

          # Create archive
          7z a "$dirname.zip" "$dirname"
          echo "ASSET=$dirname.zip" >> $GITHUB_ENV

      - name: Install WiX
        run: dotnet tool install --global wix --version 4.0.5

      - name: Create msi installer
        run: |
          wix extension add WixToolset.UI.wixext/4.0.5 WixToolset.Util.wixext/4.0.5
          wix build -arch "x64" -ext WixToolset.UI.wixext -ext WixToolset.Util.wixext -out "./iracing-ha-monitor-${{ env.VERSION }}-installer.msi" "resources/windows/iracing_ha_monitor.wxs"

      - name: Upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.ASSET }}
            iracing-ha-monitor-${{ env.VERSION }}-installer.msi
