on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  release:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive-suffix: .zip
          - target: x86_64-unknown-linux-musl
            archive-suffix: .tar.gz

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      # Cache dependencies to speed up builds
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.target }}-

      - name: Install dependencies
        #if: matrix.target == 'x86_64-unknown-linux-musl'  # Only for Linux builds
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libglib2.0-dev \
            libpango1.0-dev \
            libgdk-pixbuf2.0-dev \
            libatk1.0-dev \
            libgtk-3-dev \
            libxdo-dev \
            pkg-config

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --verbose --release --target ${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
          # Get binary name from Cargo.toml
          binary_name=$(grep -m1 'name *=' Cargo.toml | cut -d '"' -f2)

          # Create dist directory if it doesn't exist
          mkdir -p dist

          dirname="$binary_name-${{ env.VERSION }}-${{ matrix.target }}"
          mkdir "$dirname"
          
          # Copy binary
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
          else
            mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
          fi

          # Copy additional files
          cp README.md LICENSE* "$dirname" 2>/dev/null || true

          # Create archive based on target
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            7z a "dist/$dirname.zip" "$dirname"
            echo "ASSET=dist/$dirname.zip" >> $GITHUB_ENV
          else
            tar -czf "dist/$dirname.tar.gz" "$dirname"
            echo "ASSET=dist/$dirname.tar.gz" >> $GITHUB_ENV
          fi

      - name: Generate SHA256 checksums
        run: |
          cd dist
          sha256sum * > SHA256SUMS
          echo "CHECKSUM_FILE=dist/SHA256SUMS" >> $GITHUB_ENV

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.ASSET }}
            ${{ env.CHECKSUM_FILE }}
